name: CI/CD Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest
    
    env:
      NODE_ENV: production
      REACT_APP_API_URL: ${{ secrets.API_URL }}
      REACT_APP_API_VERSION: ${{ secrets.API_VERSION }}
      
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16.x'
        cache: 'npm'
    
    - name: Install Dependencies
      run: npm ci
      env:
        NODE_ENV: development
    
    - name: Security Audit
      run: npm audit
      continue-on-error: true
    
    - name: Run Tests with Coverage
      run: CI=true npm test -- --coverage
      env:
        CI: true
        NODE_ENV: test
        REACT_APP_API_URL: ${{ secrets.TEST_API_URL }}
    
    - name: Build Production
      run: npm run build
      env:
        CI: true
        NODE_ENV: production
        REACT_APP_API_URL: ${{ secrets.PROD_API_URL }}
        REACT_APP_API_VERSION: ${{ secrets.API_VERSION }}
    
    - name: Configure AWS Credentials
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
        role-duration-seconds: 1200
        role-session-name: GithubActionsDeployment
    
    - name: Deploy to S3
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
      run: |
        echo "Deploying to S3 bucket: ${{ secrets.AWS_S3_BUCKET }}"
        aws s3 sync build/ s3://${{ secrets.AWS_S3_BUCKET }} --delete
      env:
        AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
        AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
    
    - name: Invalidate CloudFront
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
      run: |
        echo "Invalidating CloudFront distribution: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}"
        aws cloudfront create-invalidation \
          --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} \
          --paths "/*"
      env:
        AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
        CLOUDFRONT_DISTRIBUTION_ID: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}
